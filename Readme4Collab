# CSIR LimeSurvey Customization (`limesurvey-csir`)

This repository is a fork of LimeSurvey for CSIR (Ghana) customizations.  
**Author/Owner:** @PaakowTronics  
**Primary working branch:** `csir-custom`  
**Tooling:** VS Code + Git/GitHub (no XAMPP instructions here)

---

## 0) Prerequisites

- Git installed: `git --version`
- VS Code installed
- A GitHub account with **Write** access to this repo

---

## 1) First-time setup (collaborators)

```bash
# 1) Clone the repo
git clone https://github.com/PaakowTronics/limesurvey-csir.git
cd limesurvey-csir

# 2) Switch to the working branch
git checkout csir-custom

# 3) Identify yourself to Git (do once per machine)
git config --global user.name "Your Full Name"
git config --global user.email "your-email@example.com"

✅ Always work on csir-custom unless the project lead asks otherwise.


2) Daily workflow (before editing)
# Always pull latest changes first
git pull origin csir-custom

3) Making changes & saving your work
Open the folder in VS Code.
Make your edits (PHP/Twig/CSS/JS, etc.).
Stage → Commit → Push:

# Bash
git add .
git commit -m "Short, clear summary of what you changed"
git push origin csir-custom

✅ Be specific: mention files/areas when helpful


4) Recommended repo structure to edit

Admin theme (safe to customize):
themes/admin/csir_admin/
(This is your duplicate of the default admin theme. Prefer editing here.)

Optional survey theme (if used):
themes/survey/csir_fruity/ (or your chosen name)

⚠️ Avoid editing core application files unless you are overriding via proper theme/view overrides. Theme copies are not overwritten by LimeSurvey updates.


5) Handling merge conflicts
i. If git pull shows conflicts:
VS Code will mark conflicts with:

<<<<<<< HEAD
your local change
=======
incoming change
>>>>>>> origin/csir-custom


ii. Manually choose the correct lines and remove the markers.
Then:
git add .
git commit -m "Resolve merge conflicts in <file>"
git push origin csir-custom

ℹ️ If you’re unsure, use Option A and let the project lead manage upstream updates.


7) Optional: Feature branches + PRs (nice for bigger changes)
# Create a feature branch from csir-custom
git checkout csir-custom
git pull origin csir-custom
git checkout -b feature/admin-login-header

# ...do work...

git add .
git commit -m "Add CSIR header to admin login"
git push origin feature/admin-login-header

Then open a Pull Request to csir-custom on GitHub for review.                                     

                                     
8) Security & housekeeping
Do not commit secrets (passwords, tokens, DB creds).
Respect .gitignore. If needed, add local editor/OS files (e.g., .vscode/, .idea/, .DS_Store).
Keep commit messages clean and meaningful.                                     


9. Quick Command Cheat Sheet
# First time
git clone https://github.com/PaakowTronics/limesurvey-csir.git
cd limesurvey-csir
git checkout csir-custom

# Daily
git pull origin csir-custom

# Save work
git add .
git commit -m "Describe changes"
git push origin csir-custom

# Conflicts
# (fix in VS Code)
git add .
git commit -m "Resolve merge conflicts"
git push origin csir-custom

# (Advanced) Sync with upstream (if asked)
git remote add upstream https://github.com/LimeSurvey/LimeSurvey.git
git fetch upstream
git checkout csir-custom
git merge upstream/master
git push origin csir-custom


Contact: Ping @PaakowTronics on GitHub for branch policy or upstream sync questions.
